# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

## history settings
# I want a huge history!
export HISTFILESIZE=10000000
export HISTSIZE=10000000

# avoid duplicate lines in the history.
# ignore same successive entries
export HISTCONTROL=ignoredups,erasedups,ignoreboth
# exclude ls, fg, bg lines
export HISTIGNORE=ls,fg,bg

## bash features
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
# auto correct typos while using cd
shopt -s cdspell
# append lines to the history file
shopt -s histappend

# Keeping bash history in sync on disk and between multiple terminals
# http://briancarper.net/blog/248/
export PROMPT_COMMAND="history -a; history -n"

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"
export LESS="-I -M -R"

# use macports' GNU coreutils instead of BSD on Mac OS.
# use icecream's gcc and g++
export PATH=/opt/local/libexec/gnubin/:/usr/lib/icecream/bin:$PATH

# enable color support of ls and also add handy aliases
if which dircolors &> /dev/null; then
    if [ "$TERM" != "dumb" ]; then
        eval "`dircolors -b`"
        alias ls='ls --color=auto'
    fi
fi

# I don't like nano
if [ -s /usr/bin/emacs ]; then
   export EDITOR="emacs -nw"
else
   export EDITOR="vim"
fi

## Alias definitions.
test -s ~/.bash_aliases && . ~/.bash_aliases || true

## bash functions
test -s ~/.bash_functions && . ~/.bash_functions || true

## Bash completion
test -s /etc/bash_completion &&  . /etc/bash_completion || true
# bash completion on ArchLinux
test -s /usr/share/git/completion/git-prompt.sh && . /usr/share/git/completion/git-prompt.sh || true
test -s /usr/share/git/completion/git-completion.bash && . /usr/share/git/completion/git-completion.bash || true
# bash completion on Mac OS
test -s /opt/local/etc/bash_completion && . /opt/local/etc/bash_completion || true

# project
test -s ~/.bash_project && . ~/.bash_project || true

# Show current branch in directories under git version control
if [[ ${EUID} == 0 ]] ; then
    PS1='\[\033[01;31m\]\h\[\033[01;34m\] \W $(declare -F __git_ps1 &> /dev/null && __git_ps1 "(%s)")\$\[\033[00m\] '
else
    PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w $(declare -F __git_ps1 &> /dev/null && __git_ps1 "(%s)")\$\[\033[00m\] '
fi

#my installs
PATH=$HOME/local/bin:/usr/local/bin:$PATH

# git-achievements - https://github.com/icefox/git-achievements
PATH=$PATH:$HOME/git-achievements/

# Use arcanist
PATH=$PATH:$HOME/local/arcanist/bin

# Ruby gems
PATH=/home/anselmo/.gem/ruby/2.0.0/bin:$PATH

# MacPorts Installer addition on 2012-04-16_at_11:14:18: adding an appropriate PATH variable for use with MacPorts.
PATH=/usr/local/git/bin:/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.

export PATH

export NODE_PATH=/usr/lib/node_modules
